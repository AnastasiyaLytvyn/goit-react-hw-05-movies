{"version":3,"file":"static/js/417.cd5c353c.chunk.js","mappings":"qRAGaA,EAAOC,EAAAA,GAAAA,GAAH,yIASJC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,sIAUPG,EAAQH,EAAAA,GAAAA,GAAH,gIAQLI,EAAOJ,EAAAA,GAAAA,GAAH,+E,6JC5BJK,EAAOL,EAAAA,GAAAA,KAAH,yGAOJM,EAAQN,EAAAA,GAAAA,MAAH,0PAcLO,EAASP,EAAAA,GAAAA,OAAH,qP,kBCrBNQ,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,+BACCA,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAxB,SACGC,GADgCD,EADzB,MAOjB,EC6BD,EApCe,WAAO,IAAD,EACnB,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,eAApB,QAA+B,GAC1CC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WAAM,wCAId,qGACoBC,EAAAA,EAAAA,IAAkBL,GADtC,OACQM,EADR,OAEEV,EAAUU,GACVJ,QAAQC,IAAIG,GAHd,4CAJc,sBACA,OAAVN,GAA4B,KAAVA,GADR,mCASdO,EACD,GAAE,CAACP,IASJ,OACE,iCACE,UAACd,EAAD,CAAMsB,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfb,EAAgB,CAAEc,KAAMF,EAAKG,SAASD,KAAKE,QAC3CJ,EAAKK,OACN,EAIG,WACE,SAAC7B,EAAD,CAAO8B,KAAK,OAAOJ,KAAK,OAAOK,YAAY,mBAC3C,SAAC9B,EAAD,CAAQ6B,KAAK,SAAb,uBAED3B,EAAO6B,OAAS,GAAI,SAAC9B,EAAD,CAAYC,OAAQA,IAAa,OAG3D,C,+LCtCK8B,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCL,GAAjC,wFACkBsB,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTpB,MAAM,GAAD,OAAKA,GACV4B,KAAM,KALL,cACCH,EADD,yBAQEA,EAASC,KAAKC,SARhB,kEAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,wFACkBR,EAAAA,EAAAA,GAAM,UAAD,OAAWQ,GAAY,CACjDP,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,wFACkBR,EAAAA,EAAAA,GAAM,UAAD,OAAWQ,EAAX,YAA+B,CACzDP,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAIEA,EAASC,KAAKM,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCH,GAAlC,wFACkBR,EAAAA,EAAAA,GAAM,UAAD,OAAWQ,EAAX,YAA+B,CACzDP,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAlCPL,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/MovieList/MovieList.js","pages/Movies/Movies.styled.js","components/MovieList/MoviesList.jsx","pages/Movies/Movies.jsx","services/MovieAPI.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin: 0;\n  padding: 0 40px;\n  list-style: none;\n`;\n\nexport const NavItem = styled(NavLink)`\n  font-size: 14px;\n  font-weight: 400;\n  text-decoration: none;\n\n  :hover {\n    color: lightcoral;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  padding: 0px 40px 10px 40px;\n  margin: 0;\n  color: black;\n`;\n\nexport const Desc = styled.h3`\nfont-size: 18px;\n  font-weight: 500;\nmargin: 10px 0;\n`","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  padding: 5px;\n  background-color: lightyellow;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 5px 15px 0px;\n  border-radius: 4px;\n  border: none;\n\n  :hover,\n  :focus {\n    outline: 1px solid lightgrey;\n  }\n`;\n\nexport const Button = styled.button`\n  color: grey;\n  background-color: lightyellow;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 5px 15px 0px;\n  border-radius: 4px;\n  border: none;\n\n  :hover {\n    color: lightcoral;\n    outline: 1px solid lightgrey;\n  }\n`;\n","import { Desc, List, NavItem} from './MovieList';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <List>\n      <Desc>We found movies:</Desc>\n      {movies.map(({ id, title }) => (\n        <NavItem to={`/movies/${id}`} key={id}>\n          {title}\n        </NavItem>\n      ))}\n    </List>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from 'services/MovieAPI';\nimport { Form, Input, Button } from './Movies.styled';\nimport { MoviesList } from 'components/MovieList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('name') ?? '';\n  console.log(query);\n\n  useEffect(() => {\n    if (query === null || query === '') {\n      return;\n    }\n    async function fetchMovie() {\n      const res = await fetchSearchMovies(query);\n      setMovies(res);\n      console.log(res);\n    }\n    fetchMovie();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ name: form.elements.name.value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"name\" placeholder=\"Search movies\"></Input>\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {movies.length > 0 ? <MoviesList movies={movies} /> : null}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '9b0207e3b87a8a2af201131b2a01e4c9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios('trending/movie/day', {\n    params: { api_key: KEY },\n  });\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: KEY,\n      query: `${query}`,\n      page: 1,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMoviesDetails(movie_id) {\n  const response = await axios(`/movie/${movie_id}`, {\n    params: { api_key: KEY },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesCast(movie_id) {\n  const response = await axios(`/movie/${movie_id}/credits`, {\n    params: { api_key: KEY },\n  });\n  return response.data.cast;\n}\n\nexport async function fetchMoviesReviews(movie_id) {\n  const response = await axios(`/movie/${movie_id}/reviews`, {\n    params: { api_key: KEY },\n  });\n  return response.data.results;\n}\n"],"names":["List","styled","NavItem","NavLink","Title","Desc","Form","Input","Button","MoviesList","movies","map","id","title","to","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","console","log","useEffect","fetchSearchMovies","res","fetchMovie","onSubmit","e","preventDefault","form","currentTarget","name","elements","value","reset","type","placeholder","length","KEY","fetchTrendingMovies","axios","params","api_key","response","data","results","page","fetchMoviesDetails","movie_id","fetchMoviesCast","cast","fetchMoviesReviews"],"sourceRoot":""}