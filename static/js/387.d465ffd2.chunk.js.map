{"version":3,"file":"static/js/387.d465ffd2.chunk.js","mappings":"yPAEaA,EAAYC,EAAAA,GAAAA,IAAH,4DAITC,EAAOD,EAAAA,GAAAA,GAAH,6IASJE,EAAOF,EAAAA,GAAAA,GAAH,sBAEJG,EAAQH,EAAAA,GAAAA,IAAH,+DAKLI,EAAQJ,EAAAA,GAAAA,GAAH,+EAMLK,EAAOL,EAAAA,GAAAA,EAAH,+E,SCQjB,EA/Ba,WACX,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,KAAKH,EAC/B,GAAE,CAACJ,IAECG,GAKH,SAACV,EAAD,WACE,UAACE,EAAD,YACIQ,EAAKK,SAAU,gEAChBL,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACR,UAACjB,EAAD,YACE,SAACC,EAAD,CACEiB,IAAG,0CAAqCF,GACxCG,IAAKJ,KAEP,SAACb,EAAD,UAAQa,KACR,SAACZ,EAAD,UAAOc,MANEH,EADH,SAPP,IAoBV,C,+LChCKM,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBP,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTS,MAAM,GAAD,OAAKA,GACVC,KAAM,KALL,cACCL,EADD,yBAQEA,EAASC,KAAKC,SARhB,kEAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,wFACkBV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,GAAY,CACjDT,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BsB,GAA/B,wFACkBV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,YAA+B,CACzDT,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAIEA,EAASC,KAAKnB,MAJhB,kEAOA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAAkCD,GAAlC,wFACkBV,EAAAA,EAAAA,GAAM,UAAD,OAAWU,EAAX,YAA+B,CACzDT,OAAQ,CAAEC,QAASJ,KAFhB,cACCK,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAlCPL,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/MovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  border-top: 1px solid lightgrey;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin: 0;\n  padding: 20px 40px;\n  list-style: none;\n`;\n\nexport const Item = styled.li``;\n\nexport const Image = styled.img`\n  max-width: 150px;\n  height: 200px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  font-weight: 500;\n  margin: 0;\n`;\n\nexport const Desc = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n  margin: 0;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCast } from 'services/MovieAPI';\nimport { Container, Desc, Image, Item, List, Title } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchMoviesCast(movieId).then(setCast);\n  }, [movieId]);\n\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <Container>\n      <List>\n        {!cast.length && <div>There is no information about cast</div>}\n        {cast.map(({ id, name, profile_path, character }) => (\n          <Item key={id}>\n            <Image\n              src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n              alt={name}\n            ></Image>\n            <Title>{name}</Title>\n            <Desc>{character}</Desc>\n          </Item>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '9b0207e3b87a8a2af201131b2a01e4c9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios('trending/movie/day', {\n    params: { api_key: KEY },\n  });\n  return response.data.results;\n}\n\nexport async function fetchSearchMovies(query) {\n  const response = await axios('search/movie', {\n    params: {\n      api_key: KEY,\n      query: `${query}`,\n      page: 1,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMoviesDetails(movie_id) {\n  const response = await axios(`/movie/${movie_id}`, {\n    params: { api_key: KEY },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesCast(movie_id) {\n  const response = await axios(`/movie/${movie_id}/credits`, {\n    params: { api_key: KEY },\n  });\n  return response.data.cast;\n}\n\nexport async function fetchMoviesReviews(movie_id) {\n  const response = await axios(`/movie/${movie_id}/reviews`, {\n    params: { api_key: KEY },\n  });\n  return response.data.results;\n}\n"],"names":["Container","styled","List","Item","Image","Title","Desc","movieId","useParams","useState","cast","setCast","useEffect","fetchMoviesCast","then","length","map","id","name","profile_path","character","src","alt","KEY","fetchTrendingMovies","axios","params","api_key","response","data","results","fetchSearchMovies","query","page","fetchMoviesDetails","movie_id","fetchMoviesReviews"],"sourceRoot":""}